#! /usr/bin/python

# autogenerated on 2020-03-11 11:49

# add Gaussian noise to an image

import cv2
import numpy as np

from utils import *


def generate_gaussian_noise(mu, sigma, height, width, min_value=0, max_value=255):
    noise = np.random.normal(mu, sigma, (height, width))
    for i, row in enumerate(noise):
        for j, v in enumerate(row):
            while v < min_value or v > max_value:
                v = np.random.normal(mu, sigma, 1)
            noise[i, j] = v
    noise = noise.astype(np.uint8)
    return noise


@colorize
def apply_noise(img, mu, sigma):
    noise = generate_gaussian_noise(mu, sigma, *img.shape)
    return img + noise


def main():
    img = load_image(color=True)
    imgs = (
        (f"noise range = -{n} {n}", apply_noise(img, 0, 100)) for n in [10, 20, 30, 40]
    )
    show_image(*imgs, wait=7)


if __name__ == "__main__":
    main()
