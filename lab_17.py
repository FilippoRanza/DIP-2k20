#! /usr/bin/python

# autogenerated on 2020-05-20 11:42

# Morphological Operators

import cv2
import numpy as np

from utils import *


def cross_operator(img, callback):
    size_x, size_y = img.shape
    output = np.zeros((size_x, size_y), dtype=np.uint8)
    for x in range(size_x):
        for y in range(size_y):
            px = max(0, x - 1)
            nx = min(x + 1, size_x - 1)
            py = max(0, y - 1)
            ny = min(y + 1, size_y - 1)
            if callback(img[px, y], img[nx, y], img[x, py], img[x, ny]):
                output[x, y] = 255

    return output


def erosion(img):
    return cross_operator(img, lambda a, b, c, d: a and b and c and d)


def dilation(img):
    return cross_operator(img, lambda a, b, c, d: a or b or c or d)


def main():
    img = load_image_from_arg()
    _, img = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)
    img = 255 - img
    erosion_img = erosion(img)
    dilation_img = dilation(img)

    show_image(("Binary", img), ("Erosion", erosion_img), ("Dilation", dilation_img))


if __name__ == "__main__":
    main()
